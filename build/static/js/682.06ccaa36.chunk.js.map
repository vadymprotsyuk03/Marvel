{"version":3,"file":"static/js/682.06ccaa36.chunk.js","mappings":"sPAIA,MAaA,EAbkBA,KAEVC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAUC,IAAI,cACxBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,0BACRC,EAAAA,EAAAA,KAAA,SAAK,kBAG/BA,EAAAA,EAAAA,KAAA,OAAKC,IAAKG,EAAcD,IAAI,oB,yGCXxC,MAMA,EANqBE,KAEbL,EAAAA,EAAAA,KAAA,OAAKM,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASC,UAAW,UAAWC,OAAQ,UAAWV,IAAKW,EAAKT,IAAI,S,uHCOhI,MAAMU,EAAaA,CAACC,EAASC,EAAWC,KACpC,OAAOF,GACH,IAAK,UACD,OAAOd,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,IACnB,IAAK,UACD,OAAOD,GAAiBhB,EAAAA,EAAAA,KAACe,EAAS,KAAKf,EAAAA,EAAAA,KAACiB,EAAAA,EAAO,IACnD,IAAK,YACD,OAAOjB,EAAAA,EAAAA,KAACe,EAAS,IACrB,IAAK,QACD,OAAOf,EAAAA,EAAAA,KAACK,EAAAA,EAAY,IACxB,QACI,MAAM,IAAIa,MAAM,4BACxB,EAqEJ,EAlEmBC,KAEf,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCN,EAAgBO,IAAqBD,EAAAA,EAAAA,WAAS,IAC9CE,EAAQC,IAAaH,EAAAA,EAAAA,UAAS,IAC9BI,EAAaC,IAAkBL,EAAAA,EAAAA,WAAS,IAEzC,aAAEM,EAAY,QAAEd,EAAO,WAAEe,IAAcC,EAAAA,EAAAA,MAE7CC,EAAAA,EAAAA,YAAU,KACNC,EAAUR,GAAQ,EAAK,GAExB,IAEH,MAAMQ,EAAYA,CAACR,EAAQS,KACbV,GAAVU,GACAL,EAAaJ,GACRU,KAAKC,GACLD,MAAK,IAAML,EAAW,cAAa,EAGtCM,EAAsBC,IACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZhB,EAAc,IAAID,KAAegB,IACjCb,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeU,EAAM,EAuBzB,OACIxC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,CACxBc,EAAWC,GAAS,IAtB7B,SAAsByB,GAClB,MAAMC,EAAQD,EAAIE,KAAI,CAACC,EAAMC,KAErB3C,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,UACxBF,EAAAA,EAAAA,MAAC+C,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,EAAKK,IAAKhD,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKyC,EAAKM,UAAW7C,IAAKuC,EAAKO,MAAOnD,UAAU,sBACrDE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAAE2C,EAAKO,SACzCjD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAE2C,EAAKQ,YAJhBP,KAU1C,OACI3C,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SACvByC,GAGb,CAImCW,CAAY/B,IAAaJ,IACpDhB,EAAAA,EAAAA,KAAA,UACIoD,SAAUpC,EACVV,MAAO,CAAC,QAAYoB,EAAc,OAAS,SAC3C5B,UAAU,mCACVuD,QAASA,IAAMrB,EAAUR,GAAQzB,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,kBAEzB,E,cClFd,MAgBA,EAhBmBuD,KAEXzD,EAAAA,EAAAA,MAAA0D,EAAAA,SAAA,CAAAxD,SAAA,EACAF,EAAAA,EAAAA,MAAC2D,EAAAA,EAAM,CAAAzD,SAAA,EACHC,EAAAA,EAAAA,KAAA,QACIyD,KAAK,cACLC,QAAQ,kCAEZ1D,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAEPC,EAAAA,EAAAA,KAACJ,EAAAA,EAAS,KACVI,EAAAA,EAAAA,KAACmB,EAAU,M,+CCdhB,MC6EP,EA7EyBW,KACrB,MAAM,QAAC6B,EAAO,WAAEC,EAAU,QAAE9C,EAAO,WAAEe,GDDlBgC,MACnB,MAAO/C,EAASe,IAAcP,EAAAA,EAAAA,UAAS,WA+BvC,MAAO,CAACqC,SA7BQG,EAAAA,EAAAA,cAAYC,eAAOC,GAGqB,IAFpDC,EAAMC,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAG,MACTE,EAAIF,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAG,KACPG,EAAOH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,eAAgB,oBAE3BrC,EAAW,WAEX,IACI,MAAMyC,QAAiBC,MAAMP,EAAK,CAACC,SAAQG,OAAMC,YAEjD,IAAKC,EAASE,GACV,MAAM,IAAItD,MAAM,mBAAD4B,OAAoBkB,EAAG,cAAAlB,OAAawB,EAASG,SAGhE,MAAMC,QAAaJ,EAASK,OAE5B,OADA9C,EAAW,aACJ6C,CAEX,CAAE,MAAME,GAEJ,MADA/C,EAAW,SACL+C,CACV,CAEJ,GAAG,IAMchB,YAJEE,EAAAA,EAAAA,cAAY,KAC3BjC,EAAW,UAAU,GACtB,IAE0Bf,UAASe,aAAW,EC/BEgC,GAE7CgB,EAAW,4CACXC,EAAU,0CA8BbC,EAAuBC,IACrB,CACNjC,GAAIiC,EAAKjC,GACTU,KAAMuB,EAAKvB,KACXwB,YAAaD,EAAKC,YAAW,GAAAnC,OACvBkC,EAAKC,YAAYC,MAAM,EAAG,KAAI,OACjC,6CACHlC,UAAWgC,EAAKhC,UAAUmC,KAAO,IAAMH,EAAKhC,UAAUoC,UACtDC,SAAUL,EAAKM,KAAK,GAAGtB,IACvBuB,KAAMP,EAAKM,KAAK,GAAGtB,IACnBwB,OAAQR,EAAKQ,OAAOhD,QAIhBiD,EAAoBD,IAAY,IAADE,EACpC,MAAO,CACN3C,GAAIyC,EAAOzC,GACXE,MAAOuC,EAAOvC,MACdgC,YAAaO,EAAOP,aAAe,0BACnCU,UAAWH,EAAOG,UAAS,GAAA7C,OACrB0C,EAAOG,UAAS,OACnB,2CACH3C,UAAWwC,EAAOxC,UAAUmC,KAAO,IAAMK,EAAOxC,UAAUoC,UAC1DQ,UAA+B,QAArBF,EAAAF,EAAOK,YAAY,UAAE,IAAAH,OAAA,EAArBA,EAAuBE,WAAY,QAE7C1C,MAAOsC,EAAOM,OAAO,GAAG5C,MAAK,GAAAJ,OACvB0C,EAAOM,OAAO,GAAG5C,MAAK,KACzB,gBACH,EAGF,MAAO,CACNU,aACA9C,UACAe,aACAkE,iBA9D2BhC,iBAAiC,IAA1BvC,EAAM0C,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAFlB,IAIhB,aADkBP,EAAQ,GAADb,OAAI+B,EAAQ,8BAAA/B,OAA6BtB,EAAM,KAAAsB,OAAIgC,KACjEJ,KAAKsB,QAAQvD,IAAIsC,EAChC,EA4DFkB,mBA1D0BlC,gBACRJ,EAAQ,GAADb,OAAI+B,EAAQ,oBAAA/B,OAAmBW,EAAI,KAAAX,OAAIgC,KACrDJ,KAAKsB,QAAQvD,IAAIsC,GAyD5BmB,aAtDuBnC,UACjB,MAAMoC,QAAYxC,EAAQ,GAADb,OAAI+B,EAAQ,eAAA/B,OAAcC,EAAE,KAAAD,OAAIgC,IACzD,OAAOC,EAAoBoB,EAAIzB,KAAKsB,QAAQ,GAAG,EAqDrDpE,aAlDuBmC,iBAAuB,IAAhBvC,EAAM0C,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAIvC,aAHkBP,EAAQ,GAADb,OACrB+B,EAAQ,8CAAA/B,OAA6CtB,EAAM,KAAAsB,OAAIgC,KAExDJ,KAAKsB,QAAQvD,IAAIgD,EAC7B,EA8CCW,SA5CgBrC,UAChB,MAAMoC,QAAYxC,EAAQ,GAADb,OAAI+B,EAAQ,WAAA/B,OAAUC,EAAE,KAAAD,OAAIgC,IACrD,OAAOW,EAAiBU,EAAIzB,KAAKsB,QAAQ,GAAG,EA2C5C,C","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}} src={img} alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useState, useEffect} from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch(process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');      \n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"\r\n                />\r\n            <title>Comics page</title>\r\n        </Helmet>\r\n            <AppBanner/> \r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, \r\n        method = 'GET', \r\n        body = null, \r\n        headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();           \r\n            setProcess('confirmed');\r\n            return data;\r\n\r\n        } catch(e) {          \r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess};\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=84ec864cead8868f50d8705b26b1c990';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn {\r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacterByName,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t};\r\n};\r\n\r\nexport default useMarvelService;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","Error","ComicsList","comicsList","setComicsList","useState","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","items","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","data","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","results","getCharacterByName","getCharacter","res","getComic"],"sourceRoot":""}